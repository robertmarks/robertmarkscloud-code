{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "testSecret": {
            "type": "object"
        },
        "appStorageAccountType": {
            "type": "string"
        },
        "environmentTag": {
            "type": "string"
        }
    },
    "variables": {
        "appName": "[concat('robmarks', parameters('environmentTag'))]",
        "appStorageAccountName": "[concat('robmarks', parameters('environmentTag'), 'stor')]",
        "keyVaultName": "[concat('robmarks', parameters('environmentTag'), 'kv')]",
        "functionResourceGroup": "[concat('robmarks', parameters('environmentTag'))]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('appStorageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('appStorageAccountName')]",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('appStorageAccountType')]"
            },
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false
            },
            "tags": {
                "Type": "storage",
                "Environment": "[parameters('environmentTag')]",
                "Function": "displaySecret"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[variables('appName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "properties": {
                "name": "[variables('appName')]",
                "computeMode": "Dynamic"
            },
            "tags": {
                "Type": "asp",
                "Environment": "[parameters('environmentTag')]",
                "Function": "displaySecret"
            }
        },
        {
            "apiVersion": "2019-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('appName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "tags": {
                "Type": "function",
                "Environment": "[parameters('environmentTag')]",
                "Function": "displaySecret"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appName'))]",
                "httpsOnly": true,
                "siteConfig": {
                    "ftpsState": "Disabled",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('appStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-04-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('appStorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2019-04-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('appName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "powershell"
                        },
                        {
                            "name": "EXAMPLE_SECRET",
                            "value": "[concat('@Microsoft.KeyVault(VaultName=', variables('keyVaultName'), ';SecretName=', parameters('testSecret').secret[0].name, ';SecretVersion=', parameters('testSecret').secret[0].version, ')')]"
                        }
                    ]
                }
            }
        },
        {
            "comments": "Inline deployment",
            "name": "[concat(variables('appName'), '-KeyVaultPermission')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "resourceGroup": "[variables('functionResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "name": "[concat(variables('keyVaultName'), '/add')]",
                            "location": "[resourceGroup().location]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[reference(resourceId('Microsoft.Web/sites', variables('appName')), '2019-08-01', 'Full').identity.tenantId]",
                                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('appName')), '2019-08-01', 'Full').identity.principalId]",
                                        "permissions": {
                                            "secrets": [
                                                "get"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('appName'))]"
            ]
        }
    ]
}
