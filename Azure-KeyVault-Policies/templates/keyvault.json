{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "existingPolicies": {
            "type": "object",
            "defaultValue": { "list": [] }
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]"
        },
        "userAccessObjectId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the object ID of a user, service principal or security group in the AAD tenant for the vault. The object ID must be unique for the list of access policies."
            }
        },
        "userAccessKeysPermissions": {
            "type": "array",
            "metadata": {
                "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
            }
        },
        "userAccessSecretsPermissions": {
            "type": "array",
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "userAccessCertificatePermissions": {
            "type": "array",
            "metadata": {
                "description": "Permissions to certificates - all, get, list, delete, create, import, update, managecontacts, getissuers, listissuers, setissuers, deleteissuers, manageissuers, recover, purge, backup, restore"
            }
        },
        "spObjectId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the object ID of a user, service principal or security group in the AAD tenant for the vault. The object ID must be unique for the list of access policies."
            }
        },
        "spSecretsPermissions": {
            "type": "array"
        }
    },
    "variables": {
        "keyVaultName": "robmarkscloudpolicykv",
        "keyVaultResourceGroup": "keyvault-policies"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "apiVersion": "2018-02-14",
            "location": "[resourceGroup().location]",
            "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "enablePurgeProtection": true,
                "enableSoftDelete": true,
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": [
                    {
                        "objectId": "[parameters('userAccessObjectId')]",
                        "tenantId": "[parameters('tenantId')]",
                        "permissions": {
                            "keys": "[parameters('userAccessKeysPermissions')]",
                            "secrets": "[parameters('userAccessSecretsPermissions')]",
                            "certificates": "[parameters('userAccessCertificatePermissions')]"
                        }
                    },
                    {
                        "objectId": "[parameters('spObjectId')]",
                        "tenantId": "[parameters('tenantId')]",
                        "permissions": {
                            "secrets": "[parameters('spSecretsPermissions')]"
                        }
                    }
                ],
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        },
        {
            "comments": "Inline deployment",
            "name": "[concat(variables('keyVaultName'), '-KeyVaultPermission')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "resourceGroup": "[variables('keyVaultResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "name": "[concat(variables('keyVaultName'), '/add')]",
                            "location": "[resourceGroup().location]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "accessPolicies": "[parameters('existingPolicies').list]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('keyVaultName'))]"
            ]
        }
    ]
}
